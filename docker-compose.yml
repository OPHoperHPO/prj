version: '3.7'

services:
  fastapi:
    build: .
    container_name: hackaton_back
    networks:
      - hackaton_net
    ports:
      - '8001:80'
    environment:
      PORT: 80
      POSTGRES_HOST: postgres://admin:admin@hackaton_db/hackaton
    restart: always
  database:
    image: "postgres" # use latest official postgres version
    container_name: hackaton_db
    networks:
      - hackaton_net
    env_file:
      - database.env # configure postgres
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts downvolumes:

#  ethereum:
#    image: "ethereum/client-go"
#    container_name: etherium-node
#    networks:
#      - hackaton_net
#    ports:
#      - "8545:8545"
#      - "30303:30303"
#    volumes:
#      - eth-data:/root
  geth-bootnode:
    hostname: geth-bootnode
    env_file:
      - .env
    image: geth-client
    ports:
      - "30303:30303"
    build:
      context: ./ethereum
      args:
        - ACCOUNT_PASSWORD=${ACCOUNT_PASSWORD}
    command:
      --nodekeyhex="b0ac22adcad37213c7c565810a50f1772291e7b0ce53fb73e7ec2a3c75bc13b5"
      --nodiscover
      --ipcdisable
      --networkid=${NETWORK_ID}
    volumes:
      - eth-data2:/root
    networks:
      hackaton_net:

  geth-rpc-endpoint:
    hostname: geth-rpc-endpoint
    env_file:
      - .env
    image: geth-client
    depends_on:
      - geth-bootnode
    command:
      --bootnodes="enode://af22c29c316ad069cf48a09a4ad5cf04a251b411e45098888d114c6dd7f489a13786620d5953738762afa13711d4ffb3b19aa5de772d8af72f851f7e9c5b164a@geth-bootnode:30303"
      --allow-insecure-unlock
      --http
      --http.addr="0.0.0.0"
      --http.api="eth,web3,net,admin,personal"
      --http.corsdomain="*"
      --networkid=${NETWORK_ID}
    ports:
      - "8545:8545"
    networks:
      hackaton_net:

#  geth-miner:
#    hostname: geth-miner
#    env_file:
#      - .env
#    image: geth-client
#    depends_on:
#      - geth-bootnode
#    command:
#      --bootnodes="enode://af22c29c316ad069cf48a09a4ad5cf04a251b411e45098888d114c6dd7f489a13786620d5953738762afa13711d4ffb3b19aa5de772d8af72f851f7e9c5b164a@geth-bootnode:30303"
#      --mine
#      --miner.threads=1
#      --networkid=${NETWORK_ID}
#    networks:
#      hackaton_net:


networks:
  hackaton_net:

volumes:
  database-data: # named volumes can be managed easier using docker-compose
  eth-data2: